<?xml version="1.0" encoding="UTF-8" ?>
<configuration>
    <!--
        <property name="" value=""></property>
        配置文件通用属性,通过${name}的形式取值
    -->
    <property name="pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %c %M %L %m%n"></property>

    <property name="logDir" value="D://github//utils_learn//logback_learn"></property>

    <!-- 控制台Appender -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!--
            输出目标的配置，
            System.out：以黑色字体（默认）
            System.err：红色字体
        -->
        <target>
            System.err
        </target>
        <!-- 日志输出格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>

    <!--配置文件的appender   普通文件-->
    <appender name="fileAppender" class="ch.qos.logback.core.FileAppender">
        <file>${logDir}/logback.log</file>
        <!-- 日志输出格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>

    <!--配置html文件的appender -->
    <appender name="htmlFileAppender" class="ch.qos.logback.core.FileAppender">
        <file>${logDir}/logback.html</file>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="ch.qos.logback.classic.html.HTMLLayout">
                <pattern>${pattern}</pattern>
            </layout>
        </encoder>
    </appender>

    <!-- 可拆分、归档的文件-->
    <appender name="roll" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logDir}/roll_logback.log</file>
        <!-- 日志输出格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
        </encoder>
        <!--指定拆分的规则 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--按照时间和压缩格式声明文件名,gz -->
            <fileNamePattern>${logDir}/roll.%d{yyyy-MM-dd}.log%i.gz</fileNamePattern>
            <!--按照文件大小进行拆分 -->
            <maxFileSize>1KB</maxFileSize>
        </rollingPolicy>
    </appender>

    <!-- 配置控制台的Appender 使用过滤器-->
    <appender name="consoleFilter" class="ch.qos.logback.core.ConsoleAppender">
        <target>
            System.err
        </target>
        <!-- 日志输出格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
        </encoder>
        <!--配置过滤器 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--设置日志的输出级别 -->
            <level>ERROR</level>
            <!--高于level中设置的日志级别，则打印日志 -->
            <onMatch>ACCEPT</onMatch>
            <!--低于level中设置的级别，则屏蔽显示 -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="asyncAppender" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="console"></appender-ref>
    </appender>
    <!--
        日志记录器配置，可以配置多个Appender，进行多方向的日志输出
        root => rootLogger
        level:  表示日志级别
    -->
    <root level="ALL">
<!--        <appender-ref ref="fileAppender"/>-->
<!--        <appender-ref ref="console"/>-->
<!--        <appender-ref ref="htmlFileAppender"/>-->
<!--        <appender-ref ref="roll"/>-->
<!--        <appender-ref ref="consoleFilter"/>-->
        <appender-ref ref="asyncAppender"/>
    </root>
    <!--
    自定义Logger
    additivity="false" 表示不继承rootLogger
  -->
    <logger name="com.ransibi" level="info" additivity="false">
        <appender-ref ref="console"></appender-ref>
    </logger>

</configuration>